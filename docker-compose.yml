version: "3.9"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api_service
    ports:
      - "${API_PORT}:3000"
    depends_on:
      - db
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - backend_network
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_DIALECT: ${DB_DIALECT}
      DB_PORT: ${DB_PORT}

  web:
    build:
      context: ./app
      dockerfile: Dockerfile.web
    container_name: web_service
    ports:
      - "${FLUTTER_PORT}:9000"
    depends_on:
      - api
    volumes:
      - ./app:/usr/src/app
      - flutter-cache:/usr/local/flutter/bin/cache
    networks:
      - frontend_network
    environment:
      API_URL: ${API_URL}
      FLUTTER_PORT: ${FLUTTER_PORT}
      API_KEY: ${API_KEY}
      APP_ID: ${APP_ID}
      MESSAGING_SENDER_ID: ${MESSAGING_SENDER_ID}
      STORAGE_BUCKET: ${STORAGE_BUCKET}
      PROJECT_ID: ${PROJECT_ID}
      # Biến môi trường cần thiết
      PUB_HOSTED_URL: https://pub.flutter-io.cn
      FLUTTER_STORAGE_BASE_URL: https://storage.flutter-io.cn
    stdin_open: true
    tty: true

  mobile:
    build:
      context: ./app
      dockerfile: Dockerfile.mobile
    container_name: mobile_service
    ports:
      - "${FLUTTER_PORT_MOBILE}:5555"
    depends_on:
      - api
    volumes:
      - ./app/workspace:/home/developer/workspace
    networks:
      - frontend_network
    environment:
      API_URL: ${API_URL}
      FLUTTER_PORT: ${FLUTTER_PORT}
      API_KEY: ${API_KEY}
      APP_ID: ${APP_ID}
      MESSAGING_SENDER_ID: ${MESSAGING_SENDER_ID}
      STORAGE_BUCKET: ${STORAGE_BUCKET}
      PROJECT_ID: ${PROJECT_ID}
      # Biến môi trường cần thiết
      PUB_HOSTED_URL: https://pub.flutter-io.cn
      FLUTTER_STORAGE_BASE_URL: https://storage.flutter-io.cn
      ANDROID_SDK_ROOT: /home/developer/Android/sdk
      PATH: /home/developer/flutter/bin:/home/developer/flutter/bin/cache/dart-sdk/bin:$PATH
    tty: true

  db:
    image: postgres:15
    container_name: database_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  postgres_data:
  node_modules:
  flutter-cache:

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
